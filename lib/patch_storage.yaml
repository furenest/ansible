---
# This can be used patch storage nodes to minor versions of ceph
# and execute OSD bluestore repair script before reboot
#
# Mandatory input variables:
# * myhosts (str): ansible host(s)
#
# After upgrading node, the storage host will reboot.
#
# Example:
# sudo ansible-playbook -e 'myhosts=test01-storage' lib/patch_storage.yaml
#
# to update DELL-firmware set run_fw_upg=true, used on DELL metall, dsu must be installed
# sudo ansible-playbook -e 'myhosts=test01-storage run_fw_upg=true' lib/patch_storage.yaml
#
# on hosts with osd-issues use: enable_osds=false, will not enable puppet after reboot, TBU
# sudo ansible-playbook -e 'myhosts=test01-storage run_fw_upg=true enable_osds=fasle' lib/patch_storage.yaml

# Last verified: 2023-10-04 (ansible version 2.9.27)

- hosts: "{{ myhosts }}"
  serial: 1    # one host at the time
  gather_facts: false
  tasks:

    - name: First check for clean pgs
      import_tasks: tasks/wait_for_clean_pgs.yaml

    - name: Silence sensu before to many alarms are triggered
      ansible.builtin.command:
        cmd: "bin/python manage_sensu.py silence -H {{ inventory_hostname }}"
        chdir: "{{ himlarcli_path }}"
      delegate_to: "{{ inventory_hostname.split('-') | first }}-proxy-02"    # <loc>-proxy-02

    - name: Set OSD noout flag
      ansible.builtin.command: "ceph osd set noout"
      ignore_errors: true

    - name: Disable puppet
      ansible.builtin.command: "/opt/puppetlabs/bin/puppet agent --disable"

    - name: Possibly Waiting for puppetrun to be finised
      ansible.builtin.wait_for:
        path: /opt/puppetlabs/puppet/cache/state/agent_catalog_run.lock
        state: absent

    - name: Stopp osd services
      ansible.builtin.service:
        name: ceph-osd.target
        enabled: false
        state: stopped

    - name: Upgrade DELL-firmware
      when: run_fw_upg | default(false) | bool
      block:
        - name: Run dsu in non-interactive mode
          ansible.builtin.command: /sbin/dsu --non-interactive
          ignore_errors: true

    - name: alma-gpg-key is imported
      ansible.builtin.rpm_key:
        key: https://repo.almalinux.org/almalinux/RPM-GPG-KEY-AlmaLinux
        state: present
      when: false

    - name: alma-gpg-key is imported, shell edition
      ansible.builtin.shell: rpm --import https://repo.almalinux.org/almalinux/RPM-GPG-KEY-AlmaLinux
        
    - name: Update all release packages to get new gpg keys first
      ansible.builtin.dnf:
        name: '*-release'
        state: latest
        update_cache: yes

    - name: Update all packages
      ansible.builtin.dnf:
        name: '*'
        state: latest
        update_cache: yes

    - name: Silence sensu before reboot
      ansible.builtin.command:
        cmd: "bin/python manage_sensu.py silence -H {{ inventory_hostname }}"
        chdir: "{{ himlarcli_path }}"
      delegate_to: "{{ inventory_hostname.split('-') | first }}-proxy-02"    # <loc>-proxy-02

    - name: Reboot host
      ansible.builtin.command: shutdown -r 1 "Ansible updates triggered"
      async: 0
      poll: 0
      ignore_errors: true

    - name: Waiting for server to come back
      ansible.builtin.wait_for_connection:
        timeout: 1800
        delay: 75

    - name: Enable puppet
      when: enable_osds | default(true) | bool
      ansible.builtin.command: "/opt/puppetlabs/bin/puppet agent --enable"
