---
# This can be used patch storage nodes to minor versions of ceph
# and execute OSD bluestore repair script before reboot
#
# Mandatory input variables:
# * myhosts (str): ansible host(s)
#
# After upgrading node, the storage host will reboot.
#
# Example:
# sudo ansible-playbook -e "myhosts=test01-storage" lib/patch_storage.yaml
#
# to update DELL-firmware set run_fw_upg=true, used on DELL metall, dsu must be installed
#
# sudo ansible-playbook -e "myhosts=test01-storage run_fw_upg=true" lib/patch_storage.yaml
#
# Last verified: 2023-10-04 (ansible version 2.9.27)

- hosts: "{{ myhosts }}"
  serial: 1    # one host at the time
  gather_facts: false
  tasks:

    - name: First check for clean pgs
      import_tasks: tasks/wait_for_clean_pgs.yaml

    - name: Silence sensu before to many alarms are triggered
      ansible.builtin.command:
        cmd: "bin/python manage_sensu.py silence -H {{ inventory_hostname }}"
        chdir: "{{ himlarcli_path }}"
      delegate_to: "{{ inventory_hostname.split('-') | first }}-proxy-02"    # <loc>-proxy-02

    - name: Set OSD noout flag
      ansible.builtin.command: "ceph osd set noout"
      ignore_errors: true

    - name: Disable puppet
      ansible.builtin.command: "/opt/puppetlabs/bin/puppet agent --disable"

    - name: Stopp osd services
      ansible.builtin.service:
        name: ceph-osd.target
        state: stopped

    - name: Upgrade DELL-firmware
      when: run_fw_upg | default(false) | bool
      block:
        - name: Run dsu in non-interactive mode
          ansible.builtin.command: /sbin/dsu --non-interactive
          ignore_errors: true

    - name: Update all packages
      ansible.builtin.dnf:
        name: '*'
        state: latest
        update_cache: true

    - name: Transfer OSD bluestore repair script
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/../files/scripts/repair_bluestore.sh"
        dest: /root/repair_bluestore.sh
        mode: '0777'

    - name: Execute OSD bluestore repair script
      ansible.builtin.command: sh /root/repair_bluestore.sh

    - name: Stopp osd services
      ansible.builtin.service:
        name: ceph-osd.target
        state: stopped

    - name: Silence sensu before reboot
      ansible.builtin.command:
        cmd: "bin/python manage_sensu.py silence -H {{ inventory_hostname }}"
        chdir: "{{ himlarcli_path }}"
      delegate_to: "{{ inventory_hostname.split('-') | first }}-proxy-02"    # <loc>-proxy-02

    - name: Reboot host
      ansible.builtin.command: shutdown -r 1 "Ansible updates triggered"
      async: 0
      poll: 0
      ignore_errors: true

    - name: Waiting for server to come back
      ansible.builtin.wait_for_connection:
        timeout: 1800
        delay: 75

    - name: Enable puppet
      ansible.builtin.command: "/opt/puppetlabs/bin/puppet agent --enable"
